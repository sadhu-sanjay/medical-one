---
import Card from "../components/Card.astro";
import Card2 from "../components/Card2.astro";
import BGCIRCLE from "../components/BG_CIRCLE.astro";
---


<section id="section2" class="rounded-lg relative w-full h-[400dvh]">
  <div class="h-[100dvh] w-full sticky top-0 left-0 bg-secondary-light">
    <BGCIRCLE
      text="Increasing Cost"
      textOpacity={1}
      textId="headingCircle3"
      id="bgCircle3"
      class="bg-secondary/50"
    />
    <BGCIRCLE
      text="Impacts Safety"
      textOpacity={1}
      textId="headingCircle2"
      id="bgCircle2"
      class="bg-secondary"
    />
    <BGCIRCLE
      text="Disconnected Operations"
      textOpacity={1}
      textId="headingCircle1"
      id="bgCircle1"
      class="bg-primary-background"
    />

    <div
      id="heading2"
      class="transition-all duration-500 ease-in absolute top-1/2 -translate-y-1/2 -translate-x-1/2 left-1/2 w-1/2 mx-auto flex flex-col items-center justify-center gap-8"
    >
      <div
        class="border border-white/0.7 border-1
        text-white/0.7
        tracking-tighter
        rounded-lg px-6 py-2 font-bold flex items-center"
      >
        <p class="font-bold text-4xl">â€¢</p>
        <h1 class="ml-2">The Compounding Effect</h1>
      </div>
      <h1
        class="text-white/0.7 font-extrabold text-6xl
        tracking-tighter
        leading-tight
        text-center"
      >
        Patient safety progress has stalled over the past 30 years
      </h1>
    </div>
    <Card2
      id="card8"
      title="95%"
      text="of the data goes unused*"
      className="left-1/2 top-1/2 "
      headerColor="bg-primary-background"
    />
    <Card2
      id="card9"
      title=">80%"
      text=`safty events goes undocumented*`
      className="left-1/4 top-1/2"
      headerColor="bg-secondary"
    />
    <Card2
      id="card10"
      title="25%"
      text="Harm events preventable*"
      className="right-24 top-36 "
      headerColor="bg-secondary"
    />
    <Card2
      id="card11"
      title="25%"
      text="Adverse events preventable*"
      className="right-24 bottom-24 "
      headerColor="bg-secondary"
    />
    <Card2
      id="card12"
      title="76%"
      text="Health care workers reported burnouts*"
      className="left-96 top-24 "
      headerColor="bg-secondary-light "
    />
    <Card2
      id="card13"
      title="266Bn"
      text="Administrative complexity*"
      className="right-24 top-24 "
      headerColor="bg-secondary-light"
    />
    <Card2
      id="card14"
      title="$214Bn"
      text="Operational waste*"
      className="left-80  bottom-12 "
      headerColor="bg-secondary-light"
    />
    <Card2
      id="card15"
      title="15%"
      text="Expendenture driven by  adverse events*"
      className="right-24 bottom-4 "
      headerColor="bg-secondary-light"
    />
  </div>
</section>

<script is:inline>
  const break4 = 42,
    break5 = 55,
    break6 = 67;

  const card8 = document.getElementById("card8");
  const card9 = document.getElementById("card9");
  const card10 = document.getElementById("card10");
  const card11 = document.getElementById("card11");
  const card12 = document.getElementById("card12");
  const card13 = document.getElementById("card13");
  const card14 = document.getElementById("card14");
  const card15 = document.getElementById("card15");
  const bgCircle1 = document.getElementById("bgCircle1");
  const bgCircle2 = document.getElementById("bgCircle2");
  const bgCircle3 = document.getElementById("bgCircle3");
  const heading2 = document.getElementById("heading2");
  const headingCircle1 = document.getElementById("headingCircle1");
  const headingCircle2 = document.getElementById("headingCircle2");
  const headingCircle3 = document.getElementById("headingCircle3");

  window.addEventListener("scroll", (any) => {
    const scrollPercentage = Math.round(
      (window.scrollY /
        (document.documentElement.scrollHeight - window.outerHeight)) *
        100
    );
    console.log("section2  %", scrollPercentage);

    function turnIntoCircle(elements, width) {
      elements.forEach((el) => {
        el.style.width = width;
        el.style.height = width;
        el.style.left = "50%";
        el.style.top = "50%";
        el.style.transform = "translate(-50%, -50%)";
        el.style.borderRadius = "50%";
      });
    }

    function resetCircle(elArray) {
      elArray.forEach((el) => {
        el.style.borderRadius = "0%";
        el.style.width = "100%";
        el.style.height = "100dvh";
      });
    }

    function hide(elements) {
      elements.forEach((el) => {
        el.style.opacity = 0;
      });
    }
    function show(elements) {
      elements.forEach((el) => {
        el.style.opacity = 1;
      });
    }

    /**
     * Scroll Percentage
     */
    if (scrollPercentage < break4) {
      resetCircle([bgCircle1]);
      show([heading2]);
      hide([
        headingCircle1,
        headingCircle2,
        headingCircle3,
        card8,
        card9,
        card10,
        card11,
        card12,
        card13,
        card14,
        card15,
      ]);
    } else if (scrollPercentage > break4 && scrollPercentage <= break5) {
      turnIntoCircle([bgCircle1], "50dvw");
      show([card8, headingCircle1]);
      hide([headingCircle2, heading2, card9, card10, card11]);
      resetCircle([bgCircle2]);
    } else if (scrollPercentage > break5 && scrollPercentage <= break6) {
      turnIntoCircle([bgCircle1], "15dvw");
      turnIntoCircle([bgCircle2], "50dvw");
      resetCircle([bgCircle3]);
      show([card9, card10, card11, headingCircle2]);
      hide([headingCircle3,card8, card12, card13, card14, card15, headingCircle1]);
    } else if (scrollPercentage > break6 && scrollPercentage <= 100) {
      turnIntoCircle([bgCircle1], "2dvw");
      turnIntoCircle([bgCircle2], "15dvw");
      turnIntoCircle([bgCircle3], "50dvw");
      hide([headingCircle2, card8, card9, card10, card11]);
      show([headingCircle3, card12, card13, card14, card15]);
    }
  });
</script>

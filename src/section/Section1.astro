---
import Card from "../components/Card.astro";
---

<section
  id="section1"
  class="relative bg-primary-background/10 w-full h-[100dvh] overflow-scroll"
>
  <section class="w-full h-[400dvh]">
    <section id="subsection1" class="w-full h-screen sticky top-0">
      <div
        id="hero-box"
        class="h-full w-1/2 mx-auto flex flex-col items-center justify-center gap-8"
      >
        <div
          class="border border-primary border-1
        text-primary
        tracking-tighter
        rounded-lg px-6 py-2 font-bold flex items-center"
        >
          <p class="font-bold text-4xl">â€¢</p>
          <h1 class="ml-2">Complexity is increasing</h1>
        </div>
        <h1
          class="text-primary font-extrabold text-6xl
        tracking-tighter
        leading-tight
        text-center"
        >
          Health and care workers usually make mistakes as a result of a system
          or process failures, not because of their own errors.
        </h1>
      </div>
    </section>
    <section id="subsection2">
      <Card text="Many Regulatory policies to comply with" class="box1" />
      <Card text="Many Regulatory policies to comply with" class="box2" />
      <Card text="Many Regulatory policies to comply with" class="box3" />
      <Card text="Many Regulatory policies to comply with" class="box4" />
      <Card text="Box5 is box 5 Many Regulartor Plicies " class="box5" />
      <Card text="Many Regulatory policies to comply with" class="box6" />
      <Card text="Many Regulatory policies to comply with" class="box7" />
    </section>
  </section>
</section>

<script is:inline>
  const boxes = document.querySelectorAll(
    ".box1, .box2, .box4, .box3, .box5, .box6, .box7"
  );
  const heroBox = document.getElementById("hero-box");
  const section1 = document.getElementById("section1");

  section1.addEventListener("scroll", () => {
    let percentageScrolled = Math.floor(
      (section1.scrollTop / (section1.scrollHeight - section1.clientHeight)) *
        100
    );
    let scrollValue;
    let opacity;
    let scale;

    console.log("Section1 Scrolled", percentageScrolled);
    if (percentageScrolled === 0) {
      heroBox.style.opacity = 1;
      scrollValue = `0%`;
      opacity = 1;
      scale = 1.5;
    } else if (percentageScrolled > 0 && percentageScrolled <= 33) {
      heroBox.style.opacity = 1;
      scrollValue = "25%";
      opacity = 1;
      scale = 1;
    } else if (percentageScrolled > 33 && percentageScrolled <= 70) {
      heroBox.style.opacity = 0.05;
      scrollValue = "40%";
      opacity = 0.05;
      scale = 0.65;
    } else if (percentageScrolled > 70 && percentageScrolled <= 100) {
      scrollValue = "45%";
      opacity = 0;
      scale = 0.5;
    }

    boxes.forEach((box) => {
      if (box.classList.contains("box1")) {
        box.style.top = scrollValue;
        box.style.left = scrollValue;
        box.style.scale = scale;
        box.style.opacity = opacity;
      } else if (box.classList.contains("box2")) {
        box.style.right = scrollValue;
        box.style.top = scrollValue;
        box.style.scale = scale;
        box.style.opacity = opacity;
      } else if (box.classList.contains("box4")) {
        box.style.right = scrollValue;
        box.style.bottom = scrollValue;
        box.style.scale = scale;
        box.style.opacity = opacity;
      } else if (box.classList.contains("box3")) {
        box.style.left = scrollValue;
        box.style.bottom = scrollValue;
        box.style.scale = scale;
        box.style.opacity = opacity;
      } else if (box.classList.contains("box5")) {
        if (percentageScrolled <= 33 || percentageScrolled > 70) {
          box.style.opacity = 0;
        } else {
          box.style.opacity = 1;
        }

        box.style.right = scrollValue;
        box.style.top = scrollValue;
        box.style.scale = scale;
      } else if (box.classList.contains("box6")) {
        if (percentageScrolled <= 33 || percentageScrolled > 70) {
          box.style.opacity = 0;
        } else {
          box.style.opacity = 1;
        }

        box.style.scale = scale;
        box.style.left = scrollValue;
        box.style.top = scrollValue;
      } else if (box.classList.contains("box7")) {
        if (percentageScrolled <= 33 || percentageScrolled > 70) {
          box.style.opacity = 0;
        } else {
          box.style.opacity = 1;
        }

        box.style.right = scrollValue;
        box.style.bottom = scrollValue;
        box.style.scale = scale;
      }
    });
  });
</script>

<style is:global>
  /* Initial positions */
  .box1,
  .box2,
  .box3,
  .box4,
  .box5,
  .box6,
  .box7 {
    position: fixed;
    height: 100px;
    background-color: red;
    transition: all 1s ease-in-out;
  }
  #hero-box {
    transition: opacity 1s ease-in-out;
  }

  .box1 {
    top: 0;
    left: 0;
    transform: translate(-80%, -100%) scale(1.1);
  }
  .box2 {
    top: 0;
    right: 0;
    transform: translate(70%, -150%) scale(1.1);
  }
  .box3 {
    bottom: 0;
    left: 0;
    transform: translate(-70%, 120%) scale(1.1);
  }
  .box4 {
    right: 0%;
    bottom: 0%;
    transform: translate(20%, 100%) scale(1.1);
  }
  .box5 {
    right: 0;
    top: 0;
    transform: translate(140%, -250%) scale(1.4);
  }
  .box6 {
    left: 0;
    top: 0;
    transform: translate(-120%, 0%) scale(1.4);
  }
  .box7 {
    right: 0%;
    bottom: 0%;
    transform: translate(100%, 00%) scale(1.4);
  }
</style>

---
import Card from "../components/Card.astro";
---

<div id="scrollContainer" class="h-[200dvh] w-full">
  <div
    id="section1"
    class="sticky top-0 bg-primary-background w-full h-[100dvh]"
  >
    <div
      id="hero-box"
      class="absolute flex flex-col items-center gap-8 top-1/2 left-1/2
    -translate-x-1/2 -translate-y-1/2"
    >
      <div
        class="border border-primary border-1
        text-primary
        tracking-tighter
        rounded-lg px-6 py-2 font-bold flex items-center"
      >
        <p class="font-bold text-4xl">â€¢</p>
        <h1 class="ml-2">Complexity is increasing</h1>
      </div>
      <h1
        class="text-primary font-extrabold text-6xl
        tracking-tighter
        leading-tight
        text-center"
      >
        Health and care workers usually make mistakes as a result of a system or
        process failures, not because of their own errors.
      </h1>
    </div>

    <!-- <div class="bg-blue-900 top-left">Box 1</div>
    <div class="bg-blue-900 top-right">Box 2</div>
    <div class="bg-blue-900 bottom-right">Box 4</div>
    <div class="bg-blue-900 bottom-left">Box 3</div> -->
    <Card text="Many Regulatory policies to comply with" class="top-left" />
    <Card text="Many Regulatory policies to comply with" class="top-right" />
    <Card text="Many Regulatory policies to comply with" class="bottom-right" />
    <Card text="Many Regulatory policies to comply with" class="bottom-left" />
  </div>
</div>

<script is:inline>
  document.addEventListener("scroll", () => {
    let percentageScrolled =
      (window.scrollY / (document.body.scrollHeight - window.innerHeight)) *
      100;

    const boxes = document.querySelectorAll(
      ".top-left, .top-right, .bottom-right, .bottom-left"
    );
    const heroBox = document.getElementById("hero-box");

    console.log(percentageScrolled);

    heroBox.style.opacity = 1 - percentageScrolled / 100;
    boxes.forEach((box) => {
      const value = `${Math.min(percentageScrolled, 50)}%`;
      if (box.classList.contains("top-left")) {
        box.style.left = value;
        box.style.top = value;
      } else if (box.classList.contains("top-right")) {
        box.style.right = value;
        box.style.top = value;
      } else if (box.classList.contains("bottom-right")) {
        box.style.right = value;
        box.style.bottom = value;
      } else if (box.classList.contains("bottom-left")) {
        box.style.left = value;
        box.style.bottom = value;
      }
      box.style.scale = Math.max(1 - percentageScrolled / 100, 0.5);
      box.style.opacity = 1 - percentageScrolled / 100;
    });
  });
</script>

<style is:global>
  /* Initial positions */
  .top-left,
  .bottom-left,
  .bottom-right,
  .top-right {
    position: absolute;
    width: 100px;
    height: 100px;
    background-color: red;
    transition: all 1s ease-in-out;
  }

  .top-left {
    transform: translate(-100%, -100%) scale(1.4);
  }
  .top-right {
    top: 0;
    right: 0;
    transform: translate(100%, -100%) scale(1.4);
  }
  .bottom-left {
    bottom: 0;
    left: 0;
    transform: translate(-100%, 100%) scale(1.4);
  }
  .bottom-right {
    right: 0%;
    bottom: 0%;
    transform: translate(100%, 100%) scale(1.4);
  }
</style>
